(()=>{var k=Object.defineProperty;var A=Object.getOwnPropertySymbols;var $=Object.prototype.hasOwnProperty,Q=Object.prototype.propertyIsEnumerable;var J=t=>k(t,"__esModule",{value:!0});var p=(t,o)=>{var a={};for(var e in t)$.call(t,e)&&o.indexOf(e)<0&&(a[e]=t[e]);if(t!=null&&A)for(var e of A(t))o.indexOf(e)<0&&Q.call(t,e)&&(a[e]=t[e]);return a};var Z=(t,o)=>{J(t);for(var a in o)k(t,a,{get:o[a],enumerable:!0})};var S={};Z(S,{default:()=>K});var{PropsWithChildren:R1,ScriptHTMLAttributes:C1,useContext:Y}=__ALEPH__.pack["https://esm.sh/react@17.0.2"],{SSRContext:X}=__ALEPH__.pack["https://deno.land/x/aleph@v0.3.0-beta.19/framework/react/context.ts"],{inDeno:t1}=__ALEPH__.pack["https://deno.land/x/aleph@v0.3.0-beta.19/framework/react/helper.ts"];function V(t){let{scripts:o}=Y(X);if(t1){let a="script-"+(o.size+1);o.set(a,{props:t})}return null}var{default:_}=__ALEPH__.pack["https://deno.land/x/aleph@v0.3.0-beta.19/shared/util.ts"],G=new Map,P,e1=typeof Deno!="undefined"&&typeof((P=Deno.version)==null?void 0:P.deno)=="string";function M(t,o){let{document:a}=window;Array.from(a.head.children).forEach(e=>{if(e.getAttribute("data-module-id")===t){if(o){let l=e.tagName.toLowerCase();if(l==="style")G.set(t,{css:e.innerHTML});else if(l==="link"){let n=e.getAttribute("href");n&&G.set(t,{href:n})}}a.head.removeChild(e)}})}function E(t){G.has(t)&&f(t,G.get(t))}function f(t,{css:o,href:a}){if(!e1){let{document:e}=window,l=Array.from(e.head.children).find(n=>n.getAttribute("data-module-id")===t&&n.hasAttribute("ssr"));if(l)l.removeAttribute("ssr");else{let n=Array.from(e.head.children).filter(h=>h.getAttribute("data-module-id")===t),r=()=>{setTimeout(()=>{n.length>0&&n.forEach(h=>e.head.removeChild(h))},0)},c;if(_.isFilledString(o))c=e.createElement("style"),c.type="text/css",c.appendChild(e.createTextNode(o)),r();else if(_.isFilledString(a))c=e.createElement("link"),c.rel="stylesheet",c.href=a,c.onload=r;else throw new Error("applyCSS: missing css");c.setAttribute("data-module-id",t),e.head.appendChild(c)}}}var{StyleHTMLAttributes:S1,useContext:a1,useEffect:o1,useLayoutEffect:l1}=__ALEPH__.pack["https://esm.sh/react@17.0.2"],{SSRContext:c1}=__ALEPH__.pack["https://deno.land/x/aleph@v0.3.0-beta.19/framework/react/context.ts"],{inDeno:T}=__ALEPH__.pack["https://deno.land/x/aleph@v0.3.0-beta.19/framework/react/helper.ts"],n1=T?o1:l1;function w(a){var e=a,{children:t}=e,o=p(e,["children"]);let{inlineStyles:l}=a1(c1),{__styleId:n}=o,r=t==null?void 0:t.toString();return n&&r&&(T?l.set("#"+n,r):f("#"+n,{css:r})),n1(()=>()=>n&&M("#"+n),[]),null}var{useEffect:r1,useLayoutEffect:i1}=__ALEPH__.pack["https://esm.sh/react@17.0.2"],{inDeno:D}=__ALEPH__.pack["https://deno.land/x/aleph@v0.3.0-beta.19/framework/react/helper.ts"],h1=D?r1:i1;function m({href:t}){return D||E(t),h1(()=>()=>M(t,!0),[]),null}var{Children:v1,createElement:x,Fragment:F,isValidElement:s1,PropsWithChildren:P1,ReactNode:T1,useContext:d1,useEffect:u1,useMemo:g1}=__ALEPH__.pack["https://esm.sh/react@17.0.2"],{default:O}=__ALEPH__.pack["https://deno.land/x/aleph@v0.3.0-beta.19/shared/util.ts"],{SSRContext:m1}=__ALEPH__.pack["https://deno.land/x/aleph@v0.3.0-beta.19/framework/react/context.ts"],{inDeno:f1}=__ALEPH__.pack["https://deno.land/x/aleph@v0.3.0-beta.19/framework/react/helper.ts"];function R(t){let{headElements:o}=d1(m1),[a,e]=g1(()=>z1(t.children),[t.children]);return f1&&a.forEach(({type:l,props:n},r)=>o.set(r,{type:l,props:n})),u1(()=>{let{document:l}=window,n=[];if(a.size>0){let r=l.querySelector("meta[charset]");r||(r=l.createElement("meta"),r.setAttribute("charset","utf-8"),l.head.prepend(r));let c=l.createElement("meta");r.nextElementSibling?l.head.insertBefore(c,r.nextElementSibling):l.head.appendChild(c),a.forEach(({type:h,props:d})=>{if(h==="script")return;let s=l.createElement(h);Object.keys(d).forEach(v=>{let u=d[v];v==="children"?O.isFilledString(u)?s.innerText=u:O.isFilledArray(u)&&(s.innerText=u.join("")):s.setAttribute(v,String(u||""))}),l.head.insertBefore(s,c),n.push(s)}),l.head.removeChild(c)}return()=>{n.forEach(r=>l.head.removeChild(r))}},[a]),x(F,null,...e)}function z1(t){let o=new Map,a=[],e=l=>{v1.forEach(l,n=>{if(!s1(n))return;let{type:r,props:c}=n;switch(r){case F:e(c.children);break;case m:a.push(x(m,c));break;case w:a.push(x(w,c));break;case V:a.push(x(V,c));break;case"base":case"title":case"meta":case"link":case"style":case"script":case"no-script":let d=r;if(r==="meta"){let s=Object.keys(c).map(v=>v.toLowerCase());if(s.includes("charset"))return;s.includes("name")?d+=`[name=${JSON.stringify(c.name)}]`:s.includes("property")?d+=`[property=${JSON.stringify(c.property)}]`:s.includes("http-equiv")?d+=`[http-equiv=${JSON.stringify(c["http-equiv"])}]`:d+=Object.keys(c).filter(v=>!/^content|children$/i.test(v)).map(v=>`[${v.toLowerCase()}=${JSON.stringify(c[v])}]`).join("")}else r!=="title"&&(d+="-"+(o.size+1));if(["base","meta","link"].includes(r)&&"children"in c){let h=c,{children:s}=h,v=p(h,["children"]);o.set(d,{type:r,props:v})}else o.set(d,{type:r,props:c});break}})};return e(t),[o,a]}var H1="html,body{padding:0;margin:0;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif}*{box-sizing:border-box}p{max-width:1100px}.page{min-height:100vh;padding:0 .5rem;display:flex;flex-direction:column;justify-content:center;align-items:center}main{padding:5rem 0;flex:1;display:flex;flex-direction:column;justify-content:center;align-items:center}.topBar{position:absolute;top:1rem;left:1rem}.cornerIcon{margin-right:1rem;text-decoration:none}.title{margin:0;line-height:1.15;font-size:3rem}.title,.description{text-align:center}.description{line-height:1.5;font-size:1.5rem}.imageTitle{font-size:.5rem}.grid{display:flex;align-items:center;justify-content:center;flex-wrap:wrap;max-width:800px;margin-top:3rem}.verification{margin:.25rem}.verification img{-ms-interpolation-mode:nearest-neighbor;image-rendering:-moz-crisp-edges;image-rendering:pixelated}@media (max-width: 600px){.grid{width:100%;flex-direction:column}}";f("/style/index.css",{css:H1});var{useContext:I,useMemo:N}=__ALEPH__.pack["https://esm.sh/react@17.0.2"],{default:C}=__ALEPH__.pack["https://deno.land/x/aleph@v0.3.0-beta.19/shared/util.ts"],{default:p1}=__ALEPH__.pack["https://deno.land/x/aleph@v0.3.0-beta.19/framework/core/events.ts"],{RouterContext:V1,SSRContext:G1}=__ALEPH__.pack["https://deno.land/x/aleph@v0.3.0-beta.19/framework/react/context.ts"],{inDeno:M1}=__ALEPH__.pack["https://deno.land/x/aleph@v0.3.0-beta.19/framework/react/helper.ts"],b=class extends Error{};function y(){return I(V1)}function L(t,o){let{key:a,revalidate:e}=o||{},l=arguments[2],n=N(()=>[l,a].filter(Boolean).join("-"),[a]),{request:r,dataCache:c}=I(G1),h=y();return N(()=>{let s=`pagedata://${h.toString()}`;if(M1){if(n in c)return c[n];let u=0;C.isNumber(e)?u=Date.now()+Math.round(e*1e3):e===!0?u=Date.now()-1e3:C.isPlainObject(e)&&C.isNumber(e.date)&&(u=e.date);let H=t(r);if(p1.emit(`useDeno-${s}`,{id:n,value:H,expires:u}),H instanceof Promise)throw new b;return c[n]=H,H}let v=window[`${s}#${n}`];return v==null?void 0:v.value},[n,h,c,r])}var{createElement:K1,ComponentType:$1,ComponentPropsWithRef:Q1,FC:J1,ReactElement:Z1,useContext:Y1,useEffect:X1,useState:t5}=__ALEPH__.pack["https://esm.sh/react@17.0.2"],{FallbackContext:e5}=__ALEPH__.pack["https://deno.land/x/aleph@v0.3.0-beta.19/framework/react/context.ts"],{isLikelyReactComponent:a5}=__ALEPH__.pack["https://deno.land/x/aleph@v0.3.0-beta.19/framework/react/helper.ts"];var{createElement:c5,PropsWithChildren:n5,ReactNode:r5}=__ALEPH__.pack["https://esm.sh/react@17.0.2"],{FallbackContext:i5}=__ALEPH__.pack["https://deno.land/x/aleph@v0.3.0-beta.19/framework/react/context.ts"];var{default:z}=__ALEPH__.pack["https://cdn.esm.sh/v53/react@17.0.2/deno/react.js"],{default:j}=__ALEPH__.pack["https://cdn.esm.sh/v53/react@17.0.2/deno/react.js"],U={color:void 0,size:void 0,className:void 0,style:void 0,attr:void 0},q=j.createContext&&j.createContext(U),g=function(){return g=Object.assign||function(t){for(var o,a=1,e=arguments.length;a<e;a++){o=arguments[a];for(var l in o)Object.prototype.hasOwnProperty.call(o,l)&&(t[l]=o[l])}return t},g.apply(this,arguments)},w1=function(t,o){var a={};for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&o.indexOf(e)<0&&(a[e]=t[e]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var l=0,e=Object.getOwnPropertySymbols(t);l<e.length;l++)o.indexOf(e[l])<0&&Object.prototype.propertyIsEnumerable.call(t,e[l])&&(a[e[l]]=t[e[l]]);return a};function W(t){return t&&t.map(function(o,a){return z.createElement(o.tag,g({key:a},o.attr),W(o.child))})}function x1(t){return function(o){return z.createElement(L1,g({attr:g({},t.attr)},o),W(t.child))}}function L1(t){var o=function(a){var e=t.attr,l=t.size,n=t.title,r=w1(t,["attr","size","title"]),c=l||a.size||"1em",h;return a.className&&(h=a.className),t.className&&(h=(h?h+" ":"")+t.className),z.createElement("svg",g({stroke:"currentColor",fill:"currentColor",strokeWidth:"0"},a.attr,e,r,{className:h,style:g(g({color:t.color||a.color},a.style),t.style),height:c,width:c,xmlns:"http://www.w3.org/2000/svg"}),n&&z.createElement("title",null,n),t.children)};return q!==void 0?z.createElement(q.Consumer,null,function(a){return o(a)}):o(U)}function B(t){return x1({tag:"svg",attr:{viewBox:"0 0 16 16"},child:[{tag:"path",attr:{fillRule:"evenodd",d:"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"}}]})(t)}var{default:i}=__ALEPH__.pack["https://esm.sh/react@17.0.2"];function K(){let t=L(null,null,"useDeno-NiD3OPuDW9ogB1270eR1A8QCr0"),o=L(null,null,"useDeno-PxbUYSvmd9SAh77r9OGQ4pbw0");return i.createElement("div",{className:"page"},i.createElement(R,null,i.createElement("meta",{name:"viewport",content:"width=device-width"}),i.createElement("title",null,"Gambatte Speedrun TAS Verification Automation"),i.createElement(m,{rel:"stylesheet",href:"/style/index.css"})),i.createElement("main",null,i.createElement("div",{className:"topBar"},i.createElement("a",{className:"cornerIcon",href:"https://github.com/TiKevin83/pokemon/tree/gsr-test-automation/src/testing"},i.createElement(B,null)," Automation"),i.createElement("a",{className:"cornerIcon",href:"https://github.com/TiKevin83/gsr-automation-site"},i.createElement(B,null)," Site Source")),i.createElement("h1",{className:"title"},"GB TAS Verification as Test Automation for Gambatte Speedrun"),i.createElement("p",{className:"description"},"Using console verified TASes as a test framework for Game Boy emulation accuracy"),i.createElement("p",null,"Traditionally emulators have been tested via suites of test ROMs, a kind of micro-benchmark for specific console behaviors, in combination with regression tests for basic booting of games. Implementations of this can be seen in daid's ",i.createElement("a",{href:"https://daid.github.io/GBEmulatorShootout/"},"GB Emulator Shootout")," and ",i.createElement("a",{href:"https://sameboy.github.io/automation/"},"SameBoy's automation"),", which provided an inspiration for this post. This approach generally succeeds at tracking the accuracy of emulators, but it has pitfalls in the context of TASing. Tool-Assisted Speedruns generally require decently accurate emulators to maintain proper comparison between newer, faster TASes and the ones they obselete."),i.createElement("p",null,"Even further, the TASBot team and the rest of those involved in console verification require emulators that can replicate the exact state of the console at least at the time of each polled input. To learn more about console verification, you can visit the TASBot archive at ",i.createElement("a",{href:"https://runs.tas.bot/runs"},"runs.tas.bot"),". The TASBot team frequently runs into issues where TASes that were previously known to sync between emulator and console stop syncing on newer revisions of the emulator. Many systems also aren't researched enough to have a suite of testROMs by which to evaluate their accuracy."),i.createElement("p",null,"This site aims to document a supplemental approach to testROMs for the emulator development scene, using known verified TASes as a test suite for emulation accuracy. Game Boy Console Verification is mainly performed using extrems' ",i.createElement("a",{href:"https://www.gc-forever.com/wiki/index.php?title=Game_Boy_Interface"},"Game Boy Interface"),". Game Boy Interface takes an input log on a gamecube, with inputs timestamped relative to GBA audio samples, and sends those inputs to the Game Boy Player. You can find the available input logs at ",i.createElement("a",{href:"https://runs.tas.bot/runs"},"runs.tas.bot"),", with more about how the dumps were made under Console Guides - GBC and in ",i.createElement("a",{href:"https://pastebin.com/ShLmxM6L"},"this pastebin"),`. The Game Boy Player attachment for the GameCube is also the main device used to record RTA speedruns of GB/GBC/GBA games. Therefore to maintain console accuracy for the purposes of the TASing scene, an emulator needs to be able to match the behavior of the GBA's Game Boy Color mode, as opposed to the behavior of the original "brick" DMG or the original Game Boy Color (the main difference being a BIOS change in the GBA-GBC mode). This mode was recently detailed in a `,i.createElement("a",{href:"https://youtu.be/_Qqg4VCZ0k8"},"video from Modern Vintage Gamer"),"."),i.createElement("p",null,'The below images are output from a continuous automation system taking the latest updates to Gambatte Speedrun and piping back in GBI input logs of known console verified TASes. Gambatte Speedrun is currently "passing" 41 of 46 verified TASes below. 36 of the 41 passing TASes are being read from GBI input logs, with the 5 others coming from known syncing TASes using their original BizHawk bk2 instead of the GBI dump.'),i.createElement("p",null,`Two failures are coming from the "Hammerin' Harry" games, which were originally made in GBHawk, BizHawk's other main accuracy-focused GB TASing core. Many GBHawk TASes are syncing with their GBI dumps in this manner, but GBHawk may implement some behavior that Gambatte Speedrun does not in these games. Three other failures are coming from Oddworld Adventures II, Operation C, and Winnie The Pooh, Adventures in the 100 Acre Wood. Winnie the Pooh has a known syncing movie from Gambatte, but something about the dump from the published TAS isn't lining up. Oracle of Ages and Seasons are both passing, but sadly the timing for the image dump doesn't line up well for Seasons and the passing screen is blank white. Of particular note among the passes are Pokemon Gold and Crystal, which require an emulator to have an accurate RTC implementation with tunable Cart RTC clock offsets to match real cartridges (BizHawk's bk2 stores the cart offset for use here).`),i.createElement("div",{className:"grid"},o.map((a,e)=>i.createElement("div",{className:"verification",key:e},i.createElement("p",{className:"imageTitle"},a.split(".")[0]),i.createElement("img",{src:`images/${a}`,height:144,width:160,alt:a.split(".")[0]})))),i.createElement("p",null,"Powered by Deno v",t.deno)))}__ALEPH__.pack["/pages/index.tsx"]=S;})();
